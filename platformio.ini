; PlatformIO Project Configuration File
; https://docs.platformio.org/page/projectconf.html

[env]
    ; Global settings that apply to all environments
    monitor_filters = default
    monitor_echo    = yes

    src_dir = src/V002
    ; src_dir 				= src/V002
    ; data_dir                = data/V002

    build_cache_dir 		= ./.pio/build_cache

[env:seeed_xiao_esp32s3]
    platform        = espressif32
    board           = seeed_xiao_esp32s3
    framework       = arduino
    upload_speed    = 921600
    monitor_speed   = 115200

    ;src_dir 				= ./src/V002
    data_dir                = ./data/V002


    ; Library dependencies
    lib_deps = 
                    4-20ma/ModbusMaster@^2.0.1
                    tzapu/WiFiManager
                    me-no-dev/ESPAsyncWebServer
                    me-no-dev/AsyncTCP
                    bblanchon/ArduinoJson@^6.21.3

    ; Library finder mode
    lib_ldf_mode    = chain

    ; PSRAM configuration for ESP32S3
    board_build.arduino.memory_type = qio_opi
    board_build.partitions          = esp32s3_partitions.csv
    board_build.filesystem          = littlefs

    ; Build flags
    build_flags =
                ; Include paths
                -I${PROJECT_DIR}/lib/XY-SKxxx
                -I${PROJECT_DIR}/include
                -I${PROJECT_DIR}/src/config
                -I${PROJECT_DIR}/src/web_interface
                -I${PROJECT_DIR}/src/wifi_interface
                -I${PROJECT_DIR}/src/modbus

                ; Hardware configuration
                -DBOARD_HAS_PSRAM
                -mfix-esp32-psram-cache-issue
                -DARDUINO_USB_MODE=1
                -DARDUINO_USB_CDC_ON_BOOT=1

                ; Board identification
                -DCONFIG_IDF_TARGET_ESP32S3=1

                ; Feature flags
                -DASYNCWEBSERVER_REGEX=0
                -DUSE_ESP32=1
                -DNO_RP2040=1
                -DNO_ESP8266=1
                
                ; Optimization
                -Os
                -DCORE_DEBUG_LEVEL=0


; Standard PlatformIO tasks are available:
; - pio run                   = build project
; - pio run --target upload   = build and upload firmware
; - pio run --target uploadfs = build and upload filesystem
; - pio run -t custom_showsize    = show detailed firmware size information
; - pio run -t custom_showpart    = show detailed partition information
; - pio run -t uploadpart     = upload only the partition table
; - pio device monitor        = open serial monitor
